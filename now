#!/usr/bin/env bash

# Copyright 2019 William Bradley.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

function realpath() {
  dirname=$1
  if [[ $dirname = /* ]]; then
    echo "$dirname"
  else
    echo "$PWD/${dirname#./}"
  fi
}

if [ -f ".nowrc" ]; then
  # shellcheck disable=SC1091
  . .nowrc
fi
BUILDERS_DIR="${BUILDERS_DIR:-builders}"

if [ ! -d "$BUILDERS_DIR" ]; then
  printf "Could not find a '%s' directory.\n" "$BUILDERS_DIR"
  exit 1
fi

unalias now 2>/dev/null ||:

# Expose the functionality of the program to other builders so that then can
# call back in to other builders if necessary.
function now() {
  if ! [[ $BASH_VERSION == 4* ]]; then
    echo "Bash version $BASH_VERSION is not supported by 'now'."
    exit 1
  fi

  action_name=$1
  builder_name=$2
  shift 2

  if [ "$builder_name" != "" ] && [ -f "$BUILDERS_DIR/$builder_name" ]; then
    (
      # shellcheck disable=SC1090
      . "$BUILDERS_DIR/$builder_name"

      prior_cwd="$(pwd)"
      eval "$action_name $*" || exit 1
      if [ "$PWD" != "$prior_cwd" ]; then
        echo "BUGBUG: $action_name did not properly restore the directory back to $prior_cwd."
        exit 1
      fi
    )
  else
    if [ -n "$builder_name" ]; then
      printf "now: error: Could not find a builder called %s.\n" "$builder_name"
    fi
    printf "Try again.\n\nAvailable builders:\n"
    (
      cd "$BUILDERS_DIR" || {
        printf "Could not find a '%s' directory. TODO: document usage.\n" "$BUILDERS_DIR"
        exit 1
      }
      for b in *; do
        if [[ $b = _* ]]; then
          # Don't list private builders.
          continue
        fi
        sed -Ene 's/function ([a-zA-Z_-]+).*/\1/p' "$b" | \
          awk -v filename="$b" \
            '$1 !~ /^_.*$/ {
              name=$1
              printf("\tnow %-9s %-12s\n", name, filename)}'
      done
    ) | sort
    return 1
  fi
}

now "$@"
